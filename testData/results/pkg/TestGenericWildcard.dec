package pkg;

import java.util.Optional;

public class TestGenericWildcard<T> {
   public TestGenericWildcard<?> wildcard() {
      return null;// 7
   }

   public TestGenericWildcard<T> generic() {
      return (TestGenericWildcard<T>)this.wildcard();// 11
   }

   public <E> TestGenericWildcard<E> cast(TestGenericWildcard<? extends E> e) {
      return (TestGenericWildcard<E>)e;// 15
   }

   public <E> TestGenericWildcard<E> castOtherType(TestGenericWildcard<? extends TestGenericWildcard<E>> e) {
      return (TestGenericWildcard<E>)e;// 19
   }

   public <E> Optional<TestGenericWildcard<E>> castOptional(boolean bl, TestGenericWildcard<? extends TestGenericWildcard<E>> e) {
      return bl ? Optional.of((TestGenericWildcard<E>)e) : Optional.empty();// 23
   }

   public <E> TestGenericWildcard<? super E> cast2(TestGenericWildcard<? extends E> e) {
      return (TestGenericWildcard<? super E>)e;// 27
   }

   public TestGenericWildcard<TestGenericWildcard> typed() {
      return (TestGenericWildcard<TestGenericWildcard>)this.wildcard();// 31
   }

   class Two<A, B> {
      public TestGenericWildcard<T>.Two<?, B> wildcard() {
         return null;// 36
      }

      public TestGenericWildcard<T>.Two<A, B> generic() {
         return (TestGenericWildcard<T>.Two<A, B>)this.wildcard();// 40
      }

      public TestGenericWildcard<T>.Two<TestGenericWildcard.Two, TestGenericWildcard.Two> typed() {
         return (TestGenericWildcard<T>.Two<TestGenericWildcard.Two, TestGenericWildcard.Two>)this.wildcard();// 44
      }
   }
}

class 'pkg/TestGenericWildcard' {
   method 'wildcard ()Lpkg/TestGenericWildcard;' {
      0      6
      1      6
   }

   method 'generic ()Lpkg/TestGenericWildcard;' {
      0      10
      1      10
      2      10
      3      10
      4      10
   }

   method 'cast (Lpkg/TestGenericWildcard;)Lpkg/TestGenericWildcard;' {
      0      14
      1      14
   }

   method 'castOtherType (Lpkg/TestGenericWildcard;)Lpkg/TestGenericWildcard;' {
      0      18
      1      18
   }

   method 'castOptional (ZLpkg/TestGenericWildcard;)Ljava/util/Optional;' {
      0      22
      1      22
      4      22
      5      22
      6      22
      7      22
      b      22
      e      22
   }

   method 'cast2 (Lpkg/TestGenericWildcard;)Lpkg/TestGenericWildcard;' {
      0      26
      1      26
   }

   method 'typed ()Lpkg/TestGenericWildcard;' {
      0      30
      1      30
      2      30
      3      30
      4      30
   }
}

class 'pkg/TestGenericWildcard$Two' {
   method 'wildcard ()Lpkg/TestGenericWildcard$Two;' {
      0      35
      1      35
   }

   method 'generic ()Lpkg/TestGenericWildcard$Two;' {
      0      39
      1      39
      2      39
      3      39
      4      39
   }

   method 'typed ()Lpkg/TestGenericWildcard$Two;' {
      0      43
      1      43
      2      43
      3      43
      4      43
   }
}

Lines mapping:
7 <-> 7
11 <-> 11
15 <-> 15
19 <-> 19
23 <-> 23
27 <-> 27
31 <-> 31
36 <-> 36
40 <-> 40
44 <-> 44