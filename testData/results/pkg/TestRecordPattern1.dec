package pkg;

import java.lang.runtime.SwitchBootstraps;

public class TestRecordPattern1 {
   void test(Object o) {
      if (o instanceof TestRecordPattern1.Point(int a, int b)) {// 8
         System.out.println(a + b);// 9
      }
   }// 11

   void test2(Object o) {
      switch(o) {// 14
         case null:
            System.out.println("null");// 16
            break;
         case TestRecordPattern1.Point(int a, int b):
            int obj = $proxy$a((TestRecordPattern1.Point)o);
            int var7 = $proxy$b((TestRecordPattern1.Point)o);// 15
            System.out.println(a + b);
            break;
         default:
            System.out.println("everything else");// 17
      }
   }// 19

   int test3(Object o) {
      Object var2 = o;
      byte var3 = 0;

      while(true) {
         int var10000;
         switch(SwitchBootstraps.typeSwitch<"typeSwitch",TestRecordPattern1.Point,TestRecordPattern1.Point,Object>(var2, var3)) {
            case -1:
               var10000 = -1;// 23
               break;
            case 0:
               int var8 = $proxy$a((TestRecordPattern1.Point)var2);
               int a = Integer.valueOf(var8);// 24
               int var9 = $proxy$b((TestRecordPattern1.Point)var2);
               int b = Integer.valueOf(var9);
               if (a <= 0 || b <= 0) {
                  var3 = 1;
                  continue;
               }

               var10000 = a + b;// 26
               break;
            case 1:
               TestRecordPattern1.Point p = (TestRecordPattern1.Point)var2;// 27
               throw new IllegalArgumentException("Negative point not allowed");
            default:
               throw new IllegalArgumentException("Only points or null allowed");// 28
         }

         return var10000;// 22
      }
   }

   static record Point(int a, int b) {
   }
}

class 'pkg/TestRecordPattern1' {
   method 'test (Ljava/lang/Object;)V' {
      0      6
      4      6
      2b      7
      2c      7
      2d      7
      2e      7
      2f      7
      30      7
      31      7
      34      9
   }

   method 'test2 (Ljava/lang/Object;)V' {
      0      12
      4      12
      b      12
      24      17
      25      17
      26      17
      27      17
      28      17
      29      17
      2a      17
      2b      17
      2c      17
      37      18
      38      18
      39      18
      3a      18
      3b      18
      3c      18
      3d      18
      3e      18
      3f      18
      4a      19
      4b      19
      4c      19
      4d      19
      4e      19
      4f      19
      50      19
      51      19
      52      19
      53      19
      54      19
      55      20
      58      14
      59      14
      5a      14
      5b      14
      5c      14
      5d      14
      5e      14
      5f      14
      60      15
      66      22
      67      22
      68      22
      69      22
      6a      22
      6b      22
      6e      24
   }

   method 'test3 (Ljava/lang/Object;)I' {
      0      27
      1      27
      2      28
      3      28
      4      32
      5      32
      6      32
      7      32
      8      32
      9      32
      a      32
      b      32
      24      34
      25      35
      28      37
      29      37
      2a      37
      2b      37
      2c      37
      2d      37
      2e      37
      2f      37
      30      37
      31      38
      32      38
      33      38
      34      38
      35      38
      36      38
      37      38
      38      38
      39      38
      3a      38
      3b      39
      3c      39
      3d      39
      3e      39
      3f      39
      40      39
      41      39
      42      39
      43      39
      44      40
      45      40
      46      40
      47      40
      48      40
      49      40
      4a      40
      4b      40
      4c      40
      4d      40
      4e      41
      4f      41
      50      41
      53      41
      54      41
      55      41
      58      42
      59      42
      5a      43
      5d      46
      5e      46
      5f      46
      60      46
      61      46
      62      47
      65      49
      66      49
      67      49
      68      49
      69      49
      6a      49
      6f      50
      70      50
      74      50
      7c      52
      7d      52
      81      52
      82      55
   }
}

Lines mapping:
8 <-> 7
9 <-> 8
11 <-> 10
14 <-> 13
15 <-> 19
16 <-> 15
17 <-> 23
19 <-> 25
22 <-> 56
23 <-> 35
24 <-> 39
26 <-> 47
27 <-> 50
28 <-> 53
Not mapped:
1
